Program Body
{
  int M;
  double f;
  f = 0;
  double g;
  g = 0;
  double a;
  a = 0;
  double b;
  b = 0;
  double c;
  c = 0;
  double d;
  d = 0;
  while (d < M)
  {
    f = W_(1 / 2, 1, 0);
    g = W_(1 / 2, 1, 0);
    a = a + (((1 - a) * f) * g);
    b = b + (((1 - b) * f) * (1 - g));
    c = c + (((1 - c) * (1 - f)) * g);
    d = d + (((1 - d) * (1 - f)) * (1 - g));
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:double c:double b:double d:double g:double f:double M:int}

Output in normal notation:
1. Frame axioms:
M1 = M

2. Output equations:
a1 = a6(_N1)
c1 = c6(_N1)
b1 = b6(_N1)
d1 = d6(_N1)
g1 = W_((1/2),1,0)
f1 = W_((1/2),1,0)

3. Other axioms:
a6((_n1+1)) = (a6(_n1)+(((1-a6(_n1))*W_((1/2),1,0))*W_((1/2),1,0)))
c6((_n1+1)) = (c6(_n1)+(((1-c6(_n1))*(1-W_((1/2),1,0)))*W_((1/2),1,0)))
b6((_n1+1)) = (b6(_n1)+(((1-b6(_n1))*W_((1/2),1,0))*(1-W_((1/2),1,0))))
d6((_n1+1)) = (d6(_n1)+(((1-d6(_n1))*(1-W_((1/2),1,0)))*(1-W_((1/2),1,0))))
a6(0) = 0
c6(0) = 0
b6(0) = 0
d6(0) = 0
(0<=(-(M)+d6(_N1)))
(_n1<_N1) -> (d6(_n1)<M)



II. Expected Values :



Output in normal notation:
1. Frame axioms:
['e', ['M1'], ['M']]
E[M1] = M

2. Output equations:
['e', ['a1'], ['a6', ['_N1']]]
E[a1] = a6(_N1)
['e', ['c1'], ['c6', ['_N1']]]
E[c1] = c6(_N1)
['e', ['b1'], ['b6', ['_N1']]]
E[b1] = b6(_N1)
['e', ['d1'], ['d6', ['_N1']]]
E[d1] = d6(_N1)
['e', ['g1'], ['W_', ['/', ['1'], ['2']], ['1'], ['0']]]
E[g1] = ((1/2))*(1)+(1-(1/2))*(0)
['e', ['f1'], ['W_', ['/', ['1'], ['2']], ['1'], ['0']]]
E[f1] = ((1/2))*(1)+(1-(1/2))*(0)

3. Other axioms:
E[a6((_n1+1))] = (E[a6(_n1)] +E[E[(((1-a6(_n1))*W_((1/2),1,0))*W_((1/2),1,0))]])
E[c6((_n1+1))] = (E[c6(_n1)] +E[E[(((1-c6(_n1))*(1-W_((1/2),1,0)))*W_((1/2),1,0))]])
E[b6((_n1+1))] = (E[b6(_n1)] +E[E[(((1-b6(_n1))*W_((1/2),1,0))*(1-W_((1/2),1,0)))]])
E[d6((_n1+1))] = (E[d6(_n1)] +E[E[(((1-d6(_n1))*(1-W_((1/2),1,0)))*(1-W_((1/2),1,0)))]])
E[a6(0)] = 0
E[c6(0)] = 0
E[b6(0)] = 0
E[d6(0)] = 0
(E[0] <=(E[-(M)] +E[d6(_N1)]))
(_n1<_N1) -> (E[d6(_n1)] <E[M])



III. Higher Moment :



Output in normal notation:
1. Frame axioms:
E[(M1)**_h] = E[(M)**_k]

2. Output equations:
E[(a1)**_h] = E[(a6(_N1))**_k]
E[(c1)**_h] = E[(c6(_N1))**_k]
E[(b1)**_h] = E[(b6(_N1))**_k]
E[(d1)**_h] = E[(d6(_N1))**_k]
E[(g1)**_h] = E[(((1/2))*(1)**_k+(1-(1/2))*(0)**_k)**_k]
E[(f1)**_h] = E[(((1/2))*(1)**_k+(1-(1/2))*(0)**_k)**_k]

3. Other axioms:
E[(a6((_n1+1)))**_h] = (E[(a6(_n1) +(((1-a6(_n1))*W_((1/2),1,0))*W_((1/2),1,0)))**k])
E[(c6((_n1+1)))**_h] = (E[(c6(_n1) +(((1-c6(_n1))*(1-W_((1/2),1,0)))*W_((1/2),1,0)))**k])
E[(b6((_n1+1)))**_h] = (E[(b6(_n1) +(((1-b6(_n1))*W_((1/2),1,0))*(1-W_((1/2),1,0))))**k])
E[(d6((_n1+1)))**_h] = (E[(d6(_n1) +(((1-d6(_n1))*(1-W_((1/2),1,0)))*(1-W_((1/2),1,0))))**k])
E[(a6(0))**_h] = E[(0)**_k]
E[(c6(0))**_h] = E[(0)**_k]
E[(b6(0))**_h] = E[(0)**_k]
E[(d6(0))**_h] = E[(0)**_k]
(E[(0)**_k] <=(E[(-(M) +d6(_N1))**k]))
(_n1<_N1) -> (E[(d6(_n1) <M)**k])

